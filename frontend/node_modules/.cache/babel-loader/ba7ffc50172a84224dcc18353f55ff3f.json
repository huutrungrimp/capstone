{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HaTrung\\\\Documents\\\\projects\\\\August\\\\project\\\\frontend\\\\src\\\\components\\\\maps\\\\RecoveryMap.js\",\n    _this = this;\n\nimport \"leaflet/dist/leaflet.css\";\nimport { GeoJSON } from \"react-leaflet\";\nimport { MapContainer } from \"react-leaflet\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar RecoveryMap = function RecoveryMap(_ref) {\n  var recovery = _ref.recovery;\n  console.log(recovery);\n\n  var yesterday = function yesterday() {\n    var d = new Date();\n    d.setDate(d.getDate() - 1);\n    return d.toISOString().split('T')[0];\n  };\n\n  console.log(yesterday());\n  var date = yesterday();\n\n  var singlecountry = function singlecountry(country, layer) {\n    var countryName = country.properties.ADMIN;\n    var recovery = country.properties['covid' + date];\n    layer.bindPopup(countryName + \" recoveries: \" + recovery);\n  };\n\n  function getColor(d) {\n    return d > 1000000 ? \"#800026\" : d > 500000 ? \"#BD0026\" : d > 2000 ? \"#E31A1C\" : d > 100 ? \"#FC4E2A\" : d > 50 ? \"#FD8D3C\" : d > 20 ? \"#FEB24C\" : d > 10 ? \"#FED976\" : \"#FFEDA0\";\n  }\n\n  function style(feature) {\n    return {\n      fillColor: getColor(feature.properties['covid' + date]),\n      weight: 2,\n      opacity: 1,\n      color: \"white\",\n      dashArray: \"3\",\n      fillOpacity: 0.7,\n      dateFormate: \"mm/dd/yy\"\n    };\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(MapContainer, {\n        center: [20, 0],\n        zoom: 0.5,\n        scrollWheelZoom: true,\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Maps\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(GeoJSON, {\n          style: style,\n          data: recovery === undefined ? \"\" : recovery,\n          onEachFeature: singlecountry\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, _this);\n};\n\n_c = RecoveryMap;\nexport default RecoveryMap;\n\nvar _c;\n\n$RefreshReg$(_c, \"RecoveryMap\");","map":{"version":3,"sources":["C:/Users/HaTrung/Documents/projects/August/project/frontend/src/components/maps/RecoveryMap.js"],"names":["GeoJSON","MapContainer","RecoveryMap","recovery","console","log","yesterday","d","Date","setDate","getDate","toISOString","split","date","singlecountry","country","layer","countryName","properties","ADMIN","bindPopup","getColor","style","feature","fillColor","weight","opacity","color","dashArray","fillOpacity","dateFormate","undefined"],"mappings":";;;AAAA,OAAO,0BAAP;AACA,SAASA,OAAT,QAAwB,eAAxB;AACA,SAASC,YAAT,QAA6B,eAA7B;;;AAGA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAkB;AAAA,MAAfC,QAAe,QAAfA,QAAe;AACpCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;;AAEA,MAAMG,SAAS,GAAG,SAAZA,SAAY,GAAM;AACtB,QAAIC,CAAC,GAAG,IAAIC,IAAJ,EAAR;AACAD,IAAAA,CAAC,CAACE,OAAF,CAAUF,CAAC,CAACG,OAAF,KAAc,CAAxB;AACA,WAAOH,CAAC,CAACI,WAAF,GAAgBC,KAAhB,CAAsB,GAAtB,EAA2B,CAA3B,CAAP;AACD,GAJD;;AAKAR,EAAAA,OAAO,CAACC,GAAR,CAAYC,SAAS,EAArB;AACA,MAAMO,IAAI,GAAGP,SAAS,EAAtB;;AAGA,MAAMQ,aAAa,GAAG,SAAhBA,aAAgB,CAACC,OAAD,EAAUC,KAAV,EAAoB;AACxC,QAAMC,WAAW,GAAGF,OAAO,CAACG,UAAR,CAAmBC,KAAvC;AACA,QAAMhB,QAAQ,GAAGY,OAAO,CAACG,UAAR,CAAmB,UAAQL,IAA3B,CAAjB;AACAG,IAAAA,KAAK,CAACI,SAAN,CAAgBH,WAAW,GAAG,eAAd,GAAgCd,QAAhD;AACD,GAJD;;AAMA,WAASkB,QAAT,CAAkBd,CAAlB,EAAqB;AACnB,WAAOA,CAAC,GAAG,OAAJ,GACH,SADG,GAEHA,CAAC,GAAG,MAAJ,GACA,SADA,GAEAA,CAAC,GAAG,IAAJ,GACA,SADA,GAEAA,CAAC,GAAG,GAAJ,GACA,SADA,GAEAA,CAAC,GAAG,EAAJ,GACA,SADA,GAEAA,CAAC,GAAG,EAAJ,GACA,SADA,GAEAA,CAAC,GAAG,EAAJ,GACA,SADA,GAEA,SAdJ;AAeD;;AAED,WAASe,KAAT,CAAeC,OAAf,EAAwB;AACtB,WAAO;AACLC,MAAAA,SAAS,EAAEH,QAAQ,CAACE,OAAO,CAACL,UAAR,CAAmB,UAAQL,IAA3B,CAAD,CADd;AAELY,MAAAA,MAAM,EAAE,CAFH;AAGLC,MAAAA,OAAO,EAAE,CAHJ;AAILC,MAAAA,KAAK,EAAE,OAJF;AAKLC,MAAAA,SAAS,EAAE,GALN;AAMLC,MAAAA,WAAW,EAAE,GANR;AAOLC,MAAAA,WAAW,EAAE;AAPR,KAAP;AASD;;AAED,sBACE;AAAA,2BACE;AAAA,6BACE,QAAC,YAAD;AAAc,QAAA,MAAM,EAAE,CAAC,EAAD,EAAK,CAAL,CAAtB;AAA+B,QAAA,IAAI,EAAE,GAArC;AAA0C,QAAA,eAAe,EAAE,IAA3D;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,eAEE,QAAC,OAAD;AACE,UAAA,KAAK,EAAER,KADT;AAEE,UAAA,IAAI,EAAEnB,QAAQ,KAAK4B,SAAb,GAAyB,EAAzB,GAA8B5B,QAFtC;AAGE,UAAA,aAAa,EAAEW;AAHjB;AAAA;AAAA;AAAA;AAAA,iBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,WADF;AAcD,CA9DD;;KAAMZ,W;AAgEN,eAAeA,WAAf","sourcesContent":["import \"leaflet/dist/leaflet.css\";\r\nimport { GeoJSON } from \"react-leaflet\";\r\nimport { MapContainer } from \"react-leaflet\";\r\n\r\n\r\nconst RecoveryMap = ({ recovery }) => {\r\n  console.log(recovery);\r\n\r\n  const yesterday = () => {\r\n    let d = new Date();\r\n    d.setDate(d.getDate() - 1);\r\n    return d.toISOString().split('T')[0];\r\n  };\r\n  console.log(yesterday())\r\n  const date = yesterday()\r\n\r\n\r\n  const singlecountry = (country, layer) => {\r\n    const countryName = country.properties.ADMIN;\r\n    const recovery = country.properties['covid'+date];\r\n    layer.bindPopup(countryName + \" recoveries: \" + recovery);\r\n  };\r\n\r\n  function getColor(d) {\r\n    return d > 1000000\r\n      ? \"#800026\"\r\n      : d > 500000\r\n      ? \"#BD0026\"\r\n      : d > 2000\r\n      ? \"#E31A1C\"\r\n      : d > 100\r\n      ? \"#FC4E2A\"\r\n      : d > 50\r\n      ? \"#FD8D3C\"\r\n      : d > 20\r\n      ? \"#FEB24C\"\r\n      : d > 10\r\n      ? \"#FED976\"\r\n      : \"#FFEDA0\";\r\n  }\r\n\r\n  function style(feature) {\r\n    return {\r\n      fillColor: getColor(feature.properties['covid'+date]),\r\n      weight: 2,\r\n      opacity: 1,\r\n      color: \"white\",\r\n      dashArray: \"3\",\r\n      fillOpacity: 0.7,\r\n      dateFormate: \"mm/dd/yy\",\r\n    };\r\n  }\r\n\r\n  return (\r\n    <div>      \r\n      <div>\r\n        <MapContainer center={[20, 0]} zoom={0.5} scrollWheelZoom={true}>\r\n          <h5>Maps</h5>\r\n          <GeoJSON\r\n            style={style}\r\n            data={recovery === undefined ? \"\" : recovery}\r\n            onEachFeature={singlecountry}\r\n          />\r\n        </MapContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RecoveryMap;\r\n"]},"metadata":{},"sourceType":"module"}